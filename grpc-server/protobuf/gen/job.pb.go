// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: job.proto

package gen

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JobRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JobRq) Reset() {
	*x = JobRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRq) ProtoMessage() {}

func (x *JobRq) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRq.ProtoReflect.Descriptor instead.
func (*JobRq) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{0}
}

func (x *JobRq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type JobCardRp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CompanyName string `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt   string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *JobCardRp) Reset() {
	*x = JobCardRp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCardRp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCardRp) ProtoMessage() {}

func (x *JobCardRp) ProtoReflect() protoreflect.Message {
	mi := &file_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCardRp.ProtoReflect.Descriptor instead.
func (*JobCardRp) Descriptor() ([]byte, []int) {
	return file_job_proto_rawDescGZIP(), []int{1}
}

func (x *JobCardRp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobCardRp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobCardRp) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *JobCardRp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobCardRp) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_job_proto protoreflect.FileDescriptor

var file_job_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0x17, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x52, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x89,
	0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x52, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x73, 0x0a, 0x0a, 0x4a, 0x6f,
	0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x52, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x52, 0x70, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_job_proto_rawDescOnce sync.Once
	file_job_proto_rawDescData = file_job_proto_rawDesc
)

func file_job_proto_rawDescGZIP() []byte {
	file_job_proto_rawDescOnce.Do(func() {
		file_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_job_proto_rawDescData)
	})
	return file_job_proto_rawDescData
}

var file_job_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_job_proto_goTypes = []interface{}{
	(*JobRq)(nil),     // 0: protobuf.JobRq
	(*JobCardRp)(nil), // 1: protobuf.JobCardRp
}
var file_job_proto_depIdxs = []int32{
	0, // 0: protobuf.JobService.GetCard:input_type -> protobuf.JobRq
	0, // 1: protobuf.JobService.GetCards:input_type -> protobuf.JobRq
	1, // 2: protobuf.JobService.GetCard:output_type -> protobuf.JobCardRp
	1, // 3: protobuf.JobService.GetCards:output_type -> protobuf.JobCardRp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_job_proto_init() }
func file_job_proto_init() {
	if File_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCardRp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_job_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_job_proto_goTypes,
		DependencyIndexes: file_job_proto_depIdxs,
		MessageInfos:      file_job_proto_msgTypes,
	}.Build()
	File_job_proto = out.File
	file_job_proto_rawDesc = nil
	file_job_proto_goTypes = nil
	file_job_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	// 单一请求应答，一对一
	GetCard(ctx context.Context, in *JobRq, opts ...grpc.CallOption) (*JobCardRp, error)
	// 多对多
	GetCards(ctx context.Context, opts ...grpc.CallOption) (JobService_GetCardsClient, error)
}

type jobServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobServiceClient(cc grpc.ClientConnInterface) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) GetCard(ctx context.Context, in *JobRq, opts ...grpc.CallOption) (*JobCardRp, error) {
	out := new(JobCardRp)
	err := c.cc.Invoke(ctx, "/protobuf.JobService/GetCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GetCards(ctx context.Context, opts ...grpc.CallOption) (JobService_GetCardsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[0], "/protobuf.JobService/GetCards", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceGetCardsClient{stream}
	return x, nil
}

type JobService_GetCardsClient interface {
	Send(*JobRq) error
	Recv() (*JobCardRp, error)
	grpc.ClientStream
}

type jobServiceGetCardsClient struct {
	grpc.ClientStream
}

func (x *jobServiceGetCardsClient) Send(m *JobRq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *jobServiceGetCardsClient) Recv() (*JobCardRp, error) {
	m := new(JobCardRp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	// 单一请求应答，一对一
	GetCard(context.Context, *JobRq) (*JobCardRp, error)
	// 多对多
	GetCards(JobService_GetCardsServer) error
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) GetCard(context.Context, *JobRq) (*JobCardRp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCard not implemented")
}
func (*UnimplementedJobServiceServer) GetCards(JobService_GetCardsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCards not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_GetCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.JobService/GetCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetCard(ctx, req.(*JobRq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GetCards_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JobServiceServer).GetCards(&jobServiceGetCardsServer{stream})
}

type JobService_GetCardsServer interface {
	Send(*JobCardRp) error
	Recv() (*JobRq, error)
	grpc.ServerStream
}

type jobServiceGetCardsServer struct {
	grpc.ServerStream
}

func (x *jobServiceGetCardsServer) Send(m *JobCardRp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *jobServiceGetCardsServer) Recv() (*JobRq, error) {
	m := new(JobRq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCard",
			Handler:    _JobService_GetCard_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCards",
			Handler:       _JobService_GetCards_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "job.proto",
}
